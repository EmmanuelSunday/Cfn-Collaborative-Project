AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: 'AWS CloudFormation Sample Template IAM_Users_Groups_and_Policies: Sample
  template showing how to create IAM users, groups and policies. It creates a single
  user that is a member of a users group and an admin group. The groups each have
  different IAM policies associated with them. Note: This example also creates an
  AWSAccessKeyId/AWSSecretKey pair associated with the new user. The example is somewhat
  contrived since it creates all of the users and groups, typically you would be creating
  policies, users and/or groups that contain references to existing users or groups
  in your environment. Note that you will need to specify the CAPABILITY_IAM flag
  when you create the stack to allow this template to execute. You can do this through
  the AWS management console by clicking on the check box acknowledging that you understand
  this template creates IAM resources or by specifying the CAPABILITY_IAM flag to
  the cfn-create-stack command line tool or CreateStack API call.'
Parameters:
  Password:
    NoEcho: 'true'
    Type: String
    Description: New User password
    MinLength: '1'
    MaxLength: '41'
    ConstraintDescription: the password must be between 1 and 41 characters
Resources:
  Elvie:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  Emmanuel:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  Sunita:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  Jonathan:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  Maturin:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  Idriss:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password' 
  Claudio:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password' 
  Narcisse:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  John:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password'
  Mike:
    Type: AWS::IAM::User
    Properties:
      LoginProfile:
        Password: !Ref 'Password' 
  CloudSpaceEngGroup:
    Type: AWS::IAM::Group
  SGTeamGroup:
    Type: AWS::IAM::Group
  OpsTeamGroup:
    Type: AWS::IAM::Group
  Engineer:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'CloudSpaceEngGroup'
      Users: 
        - !Ref 'Elvie'
        - !Ref 'Emmanuel'
        - !Ref 'Maturin'
        - !Ref 'Sunita'
        - !Ref 'Jonathan'
  Security:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'SGTeamGroup'
      Users: 
        - !Ref 'Idriss'
        - !Ref 'Claudio'
        - !Ref 'Narcisse'
  Operation:
    Type: AWS::IAM::UserToGroupAddition
    Properties:
      GroupName: !Ref 'OpsTeamGroup'
      Users: 
        - !Ref 'John'
        - !Ref 'Mike'
  SGTeamGroupPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SGAll
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: '*'
          Resource: '*'
        Statement: 
        - Effect: Allow
          Action: 'aws-portal:*'
          Resource: '*'
      Groups: [!Ref 'SGTeamGroup']
  CloudSpaceEngGroupPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: EngineerAllNoBilg
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action: '*'
          Resource: '*'
        Statement: 
        - Effect: Deny
          Action: 'aws-portal:*'
          Resource: '*'  
      Groups: [!Ref 'CloudSpaceEngGroup']
  OpsTeamGroupPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: OpsJustEc2East1
      PolicyDocument:
        Statement:
        - Action: ec2:*
          Resource: "*"
          Effect: Allow
          Condition:
            StringEquals:
              ec2:Region: us-east-1
      Groups: [!Ref 'OpsTeamGroup']